plugins {
	//id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id "me.shedaniel.unified-publishing" version "0.1.+"
	id 'dev.architectury.loom' version '0.12.0-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	forge {
		mixinConfigs = [
				"stacker.mixins.json"
		]
	}
}

repositories {
	maven { url("https://storage.googleapis.com/devan-maven/") }
	maven { url "https://maven.shedaniel.me/" }
	//maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	//modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include "net.devtech:Stacc:1.3.2"
	modRuntimeOnly(include("net.devtech:Stacc:1.3.2"))

	modApi("me.shedaniel.cloth:cloth-config-forge:5.0.38") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	//modCompileOnly("com.terraformersmc:modmenu:${project.modmenu_version}") {
	//	transitive = false
	//}
}

processResources {
	inputs.property "version", project.version

	//filesMatching("fabric.mod.json") {
	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 and upwards uses Java 17.
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		// Add repositories to publish to here.
	}
}

